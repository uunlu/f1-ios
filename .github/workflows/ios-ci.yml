name: iOS CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build & Test
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show available simulators
      run: xcrun simctl list devices available
    
    - name: Cache derived data
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-derived-data-${{ hashFiles('**/*.xcodeproj') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-
    
    - name: Install SwiftLint
      run: brew install swiftlint
        
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging
      
    - name: Clean build folder
      run: xcodebuild clean -project F1App.xcodeproj -scheme F1App
    
    - name: Build app
      run: |
        xcodebuild build \
          -project F1App.xcodeproj \
          -scheme F1App \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.1' \
          -allowProvisioningUpdates \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Run tests
      run: |
        xcodebuild test \
          -project F1App.xcodeproj \
          -scheme F1App \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.1' \
          -parallel-testing-enabled NO \
          -resultBundlePath TestResults \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults.xcresult

  security-check:
    name: Security & Code Quality
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for hardcoded secrets
      run: |
        if grep -r "password\|secret\|key\|token" --include="*.swift" F1App/ | grep -v "// " | grep -v "/*"; then
          echo "⚠️  Potential hardcoded secrets found"
          exit 1
        fi
        echo "✅ No hardcoded secrets detected"
