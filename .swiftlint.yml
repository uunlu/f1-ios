# SwiftLint Configuration for F1App
# https://github.com/realm/SwiftLint

# Paths to include during linting. `--path` is ignored if present.
included:
  - F1App
  - F1AppTests

# Paths to ignore during linting. Takes precedence over `included`.
excluded:
  - Carthage
  - Pods
  - F1App/Preview\ Content
  - F1AppUITests

# Rules to disable
disabled_rules:
  - trailing_whitespace # Handled by editor
  - todo # Allow TODO comments during development
  - marks_required # No longer requiring MARK comments
  - public_docs_required
  - conditional_returns_on_newline
  - switch_case_on_newline
  - superfluous_disable_command

# Some rules are only opt-in
opt_in_rules:
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - enum_case_associated_values_count
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - file_name
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - function_default_parameter_at_end
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - last_where
  - let_var_whitespace
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - private_action
  - private_outlet
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - required_enum_case
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - switch_case_on_newline
  - toggle_bool
  - trailing_closure
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - yoda_condition

# Configurable rules can be customized from this configuration file
line_length:
  warning: 120
  error: 150
  ignores_urls: true
  ignores_function_declarations: true
  ignores_comments: true

file_length:
  warning: 500
  error: 800

function_body_length:
  warning: 60
  error: 100

function_parameter_count:
  warning: 6
  error: 8

type_body_length:
  warning: 300
  error: 500

type_name:
  min_length: 3
  max_length:
    warning: 40
    error: 50
  excluded:
    - id
    - URL
    - API

identifier_name:
  min_length:
    error: 2
  max_length:
    warning: 40
    error: 50
  excluded:
    - id
    - URL
    - API
    - db
    - x
    - y
    - z

large_tuple:
  warning: 3
  error: 4

nesting:
  type_level:
    warning: 2
    error: 3
  statement_level:
    warning: 5
    error: 10

cyclomatic_complexity:
  warning: 10
  error: 20

# File header configuration
file_header:
  required_pattern: |
                    \/\/
                    \/\/  .*\.swift
                    \/\/  F1App
                    \/\/
                    \/\/  Created by .* on \d{2}\/\d{2}\/\d{4}\.
                    \/\/

# Custom rules
custom_rules:
  # Require MARK comments for organizing code
  marks_required:
    name: "MARK Required"
    regex: "(class|struct|enum|extension|protocol)\\s+\\w+.*\\{[^}]*(?:func|var|let).*\\}.*(?<!MARK)"
    message: "Types with multiple members should use MARK comments for organization"
    severity: warning

  # Discourage force unwrapping
  no_force_unwrapping:
    name: "No Force Unwrapping"
    regex: (?<!\")\\w+\\!\\s*(?!\\=|\\.)|(\\?\\?)\\!(?!\")
    message: "Prefer safe unwrapping over force unwrapping"
    severity: warning

  # Require documentation for public APIs
  public_docs_required:
    name: "Public Documentation Required"
    regex: "^\\s*(public|open)\\s+(class|struct|enum|func|var|let)"
    message: "Public APIs should be documented"
    severity: 

# Additional configuration
reporter: "xcode" # Options: xcode, json, csv, checkstyle, junit, html, emoji

# Analyzer rules (require `swiftlint analyze`)
analyzer_rules:
  - explicit_self
  - unused_import
  - unused_declaration 